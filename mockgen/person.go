// Code generated by MockGen. DO NOT EDIT.
// Source: simple.go

// Package mock_simple is a generated GoMock package.
package mockgen

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPerson is a mock of Person interface
type MockPerson struct {
	ctrl     *gomock.Controller
	recorder *MockPersonMockRecorder
}

// MockPersonMockRecorder is the mock recorder for MockPerson
type MockPersonMockRecorder struct {
	mock *MockPerson
}

// NewMockPerson creates a new mock instance
func NewMockPerson(ctrl *gomock.Controller) *MockPerson {
	mock := &MockPerson{ctrl: ctrl}
	mock.recorder = &MockPersonMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPerson) EXPECT() *MockPersonMockRecorder {
	return m.recorder
}

// DoThings mocks base method
func (m *MockPerson) DoThings(arg0 string, arg1 int) (int, error) {
	ret := m.ctrl.Call(m, "DoThings", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DoThings indicates an expected call of DoThings
func (mr *MockPersonMockRecorder) DoThings(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoThings", reflect.TypeOf((*MockPerson)(nil).DoThings), arg0, arg1)
}

// DoNothing mocks base method
func (m *MockPerson) DoNothing() {
	m.ctrl.Call(m, "DoNothing")
}

// DoNothing indicates an expected call of DoNothing
func (mr *MockPersonMockRecorder) DoNothing() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoNothing", reflect.TypeOf((*MockPerson)(nil).DoNothing))
}
